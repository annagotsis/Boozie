Boozie {
    Program         = Block
    Block           = (Stmt newline)*
    Stmt            = IfStmt
                    | ForStmt
                    | WhileStmt
                    | MatchStmt
                    | ReturnStmt
                    | VarDecl
                    | Exp
    IfStmt          = "if" BoolExp "{" Stmt "}"
                        ("else if" BoolExp "{" Stmt "}")* ("else" "{" Stmt "}" )?
    WhileStmt       = "while" BoolExp "{" Block "}"
    ForStmt         = "for" id "in" id "{" Block "}"
    MatchStmt       = "match" Exp "with" Exp

    Exp             = BoolExp | Exp1

    BoolExp         = Exp1 ("and" Exp)* | Exp1 ("or" Exp)*
                    | Exp1 (relationalOp Exp)*
    Exp1            = Exp2 (addOp Exp2)*
    Exp2            = Exp3 (mulOp Exp3)*
    Exp3            = "-"?boollit | Exp4
    Exp4            = floatlit | stringlit

    boollit         = "true" | "false"
    floatlit        = digit+ ("." digit+)? (("E"|"e") ("+"|"-"))?
    stringlit       = "\"" char "\""
    char            = escape | ~escape any
    escape          = "\"" | "\"" | "\r" | "\n" | "\"   
    keywords        = "let"   | "set" | "burp"  | "for" | "in"   | "while"
                    | "match" | "if"  | "else"  | "new" | "true" | "false"
    id              = ~keywords letter idrest
    idrest          = "_" | alnum
    comment         = space | "//" any "\n"

    assignOp        = "=" | "+=" | "*=" | "-=" | "/=" | "%="
    relationalOp    = "=="| ">"  | "<"  | ">=" | "<=" | "!="
    addOp           = "+" | "-"
    mulOp           = "*" | "/"  | "%"
    newline         = "\n"
}